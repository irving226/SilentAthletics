// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SilentAthleticsWebApp.Models;

namespace SilentAthleticsWebApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210428031023_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SilentAthleticsWebApp.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BirthDate")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isLoggedIn")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            BirthDate = 0,
                            ConcurrencyStamp = "693bcfbb-59d4-4bea-87b9-ed35b6d6d4e7",
                            Email = "brianirv@yahoo.com",
                            EmailConfirmed = false,
                            IsAdmin = true,
                            LockoutEnabled = false,
                            Password = "cambodiandrive",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2ff48c29-f704-4125-bc6b-b2c9137567c6",
                            TwoFactorEnabled = false,
                            isLoggedIn = false
                        });
                });

            modelBuilder.Entity("SilentAthleticsWebApp.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("ImageData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ItemListingID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemListingID");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("SilentAthleticsWebApp.Models.ItemListing", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EndTime")
                        .HasColumnType("int");

                    b.Property<string>("Item")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SellerID")
                        .HasColumnType("int");

                    b.Property<int>("StartPrice")
                        .HasColumnType("int");

                    b.Property<int>("StartTime")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ItemListings");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Brand = "Neversummer",
                            CategoryID = 0,
                            Description = "Like new",
                            EndTime = 0,
                            Item = "Snowboard",
                            SellerID = 0,
                            StartPrice = 0,
                            StartTime = 5
                        },
                        new
                        {
                            ID = 2,
                            Brand = "Rossignol",
                            CategoryID = 0,
                            Description = "Like new",
                            EndTime = 0,
                            Item = "Skis",
                            SellerID = 0,
                            StartPrice = 0,
                            StartTime = 5
                        },
                        new
                        {
                            ID = 3,
                            Brand = "Arbor",
                            CategoryID = 0,
                            Description = "Like new",
                            EndTime = 0,
                            Item = "Snowboard",
                            SellerID = 0,
                            StartPrice = 0,
                            StartTime = 5
                        },
                        new
                        {
                            ID = 4,
                            Brand = "Burton",
                            CategoryID = 0,
                            Description = "used",
                            EndTime = 0,
                            Item = "Snowboard",
                            SellerID = 0,
                            StartPrice = 0,
                            StartTime = 5
                        },
                        new
                        {
                            ID = 5,
                            Brand = "Neversummer",
                            CategoryID = 0,
                            Description = "Like new",
                            EndTime = 0,
                            Item = "Skis",
                            SellerID = 0,
                            StartPrice = 0,
                            StartTime = 100
                        });
                });

            modelBuilder.Entity("SilentAthleticsWebApp.Models.MeetupScheduler", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuyerID")
                        .HasColumnType("int");

                    b.Property<string>("BuyerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<DateTime>("MeetingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SellerID")
                        .HasColumnType("int");

                    b.Property<string>("SellerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("SilentAthleticsWebApp.Models.Image", b =>
                {
                    b.HasOne("SilentAthleticsWebApp.Models.ItemListing", null)
                        .WithMany("Image")
                        .HasForeignKey("ItemListingID");
                });

            modelBuilder.Entity("SilentAthleticsWebApp.Models.ItemListing", b =>
                {
                    b.Navigation("Image");
                });
#pragma warning restore 612, 618
        }
    }
}
